import { Service } from 'typedi';
import {{name}}Repository from '../repositories/{{nameSnakeCase}}';

@Service()
export default class {{name}}Service {
  constructor(private {{nameVariable}}Repository: {{name}}Repository) {}

  async getAll(query: any) {
    return await this.{{nameVariable}}Repository.find(query);
  }

  async getById(req: any) {
    return await this.{{nameVariable}}Repository.findOne({ id: req.params.id });
  }

  async create(req: any) {
    return await this.{{nameVariable}}Repository.create(req.body);
  }

  async updateById(req: any) {
    return await this.{{nameVariable}}Repository.updateById(req.params.id, req.body);
  }

  async deleteById(req: any) {
    return await this.{{nameVariable}}Repository.softDeleteById(req.params.id);
  }
}
